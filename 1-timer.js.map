{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst daysSel = document.querySelector('[data-days]');\nconst hoursSel = document.querySelector('[data-hours]');\nconst minutesSel = document.querySelector('[data-minutes]');\nconst secondsSel = document.querySelector('[data-seconds]');\nconst picker = document.querySelector('#datetime-picker');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysSel.textContent = addLeadingZero(days);\n  hoursSel.textContent = addLeadingZero(hours);\n  minutesSel.textContent = addLeadingZero(minutes);\n  secondsSel.textContent = addLeadingZero(seconds);\n}\n\nfunction startTimer() {\n  startBtn.disabled = true;\n  picker.disabled = true;\n\n  timerId = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      picker.disabled = false;\n      return;\n    }\n\n    updateTimerDisplay(convertMs(diff));\n  }, 1000);\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= Date.now()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'center',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(picker, options);\nstartBtn.addEventListener('click', startTimer);\n"],"names":["startBtn","daysSel","hoursSel","minutesSel","secondsSel","picker","userSelectedDate","timerId","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","startTimer","diff","options","selectedDates","selectedDate","iziToast","flatpickr"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAS,SAAS,cAAc,kBAAkB,EAExD,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAS,SAAW,GAEpB,SAASQ,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAmB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7Dd,EAAQ,YAAcO,EAAeI,CAAI,EACzCV,EAAS,YAAcM,EAAeK,CAAK,EAC3CV,EAAW,YAAcK,EAAeM,CAAO,EAC/CV,EAAW,YAAcI,EAAeO,CAAO,CACjD,CAEA,SAASE,GAAa,CACpBjB,EAAS,SAAW,GACpBK,EAAO,SAAW,GAElBE,EAAU,YAAY,IAAM,CAC1B,MAAMW,EAAOZ,EAAmB,KAAK,IAAG,EAExC,GAAIY,GAAQ,EAAG,CACb,cAAcX,CAAO,EACrBS,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEX,EAAO,SAAW,GAClB,MACD,CAEDW,EAAmBN,EAAUQ,CAAI,CAAC,CACnC,EAAE,GAAI,CACT,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,KAAK,OACvBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,QAClB,CAAO,EACDtB,EAAS,SAAW,KAEpBM,EAAmBe,EACnBrB,EAAS,SAAW,GAEvB,CACH,EAEAuB,EAAUlB,EAAQc,CAAO,EACzBnB,EAAS,iBAAiB,QAASiB,CAAU"}